"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const m2 = require("mysql2/promise");
const SmartConnection = (fn, opts) => __awaiter(void 0, void 0, void 0, function* () {
    let conn = yield fn(opts);
    conn.defQuery = conn.query;
    conn.query = (sql, args) => conn.defQuery(sql, args)
        .then(([result]) => result)
        .catch(function (e) {
        e.sql = e.sql || conn.format(sql, args);
        throw e;
    });
    conn.promise = conn.query;
    conn.defExecute = conn.execute;
    conn.execute = (sql, args) => conn.defExecute(sql, args)
        .then(([result]) => result)
        .catch(function (e) {
        e.sql = e.sql || conn.format(sql, args);
        throw e;
    });
    conn.single = (sql, args) => conn.query(sql, args)
        .then(([row]) => row[Object.keys(row).pop()]);
    // noinspection CommaExpressionJS
    conn.associative = (key, sql, args) => conn.query(sql, args)
        .then(result => result.reduce((a, b) => (a[b[key]] = b, a), {}));
    conn.assoc = conn.associative;
    // noinspection CommaExpressionJS
    conn.pairs = (key, val, sql, args) => conn.query(sql, args)
        .then(result => result.reduce((a, b) => (a[b[key]] = b[val], a), {}));
    return conn;
});
exports.mysql21 = Object.assign(Object.assign({}, m2), { createPool: opts => SmartConnection(m2.createPool, opts), createConnection: opts => SmartConnection(m2.createConnection, opts) });
//# sourceMappingURL=index.js.map